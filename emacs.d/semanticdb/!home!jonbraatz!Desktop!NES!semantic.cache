;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("unordered_map" include (:system-flag t) nil [31 55])
            ("stdio.h" include (:system-flag t) nil [56 74])
            ("stdlib.h" include (:system-flag t) nil [75 94])
            ("assert.h" include (:system-flag t) nil [95 114])
            ("globals.h" include nil nil [115 135])
            ("cpu.h" include nil nil [136 152])
            ("nes.h" include nil nil [153 169])
            ("instructions.h" include nil nil [170 195])
            ("cpuMemory.h" include nil nil [196 218])
            ("getPC" function
               (:parent "CPU"
                :type ("Address" type (:type "class") nil nil))
                nil [221 260])
            ("setPC" function
               (:parent "CPU"
                :arguments 
                  ( ("PC" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [277 285]))                  
                :type "void")
                nil [261 308])
            ("getSP" function
               (:parent "CPU"
                :type ("Byte" type (:type "class") nil nil))
                nil [310 346])
            ("setSP" function
               (:parent "CPU"
                :arguments 
                  ( ("SP" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [363 371]))                  
                :type "void")
                nil [347 394])
            ("getStatus" function
               (:parent "CPU"
                :type ("Byte" type (:type "class") nil nil))
                nil [396 465])
            ("setStatus" function
               (:parent "CPU"
                :arguments 
                  ( ("status" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [486 498]))                  
                :type "void")
                nil [466 560])
            ("getX" function
               (:parent "CPU"
                :type ("Byte" type (:type "class") nil nil))
                nil [562 596])
            ("setX" function
               (:parent "CPU"
                :arguments 
                  ( ("X" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [612 619]))                  
                :type "void")
                nil [597 640])
            ("getY" function
               (:parent "CPU"
                :type ("Byte" type (:type "class") nil nil))
                nil [647 681])
            ("setY" function
               (:parent "CPU"
                :arguments 
                  ( ("Y" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [697 704]))                  
                :type "void")
                nil [682 725])
            ("getA" function
               (:parent "CPU"
                :type ("Byte" type (:type "class") nil nil))
                nil [727 761])
            ("setA" function
               (:parent "CPU"
                :arguments 
                  ( ("A" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [777 784]))                  
                :type "void")
                nil [762 805])
            ("execute" function
               (:parent "CPU"
                :type "void")
                nil [808 949])
            ("JMP" function
               (:parent "CPU"
                :arguments 
                  ( ("address" variable (:type ("Address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [965 981]))                  
                :type "void")
                nil [951 1001]))          
      :file "cpu.cpp"
      :pointmax 1005
      :fsize 1004
      :lastmodtime '(22804 41899 876954 208000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("CPU_H" variable (:constant-flag t) nil [23 28])
            ("assert.h" include (:system-flag t) nil [30 49])
            ("globals.h" include nil nil [50 70])
            ("new_type.h" include nil nil [71 92])
            ("MASK_STATUS_ZERO_ON" variable (:constant-flag t) nil [102 121])
            ("MASK_STATUS_ZERO_OFF" variable (:constant-flag t) nil [140 160])
            ("MASK_STATUS_DECIMAL_ON" variable (:constant-flag t) nil [183 205])
            ("MASK_STATUS_DECIMAL_OFF" variable (:constant-flag t) nil [224 247])
            ("MASK_STATUS_NEGATIVE_ON" variable (:constant-flag t) nil [270 293])
            ("MASK_STATUS_NEGATIVE_OFF" variable (:constant-flag t) nil [312 336])
            ("MASK_STATUS_OVERFLOW_ON" variable (:constant-flag t) nil [359 382])
            ("MASK_STATUS_OVERFLOW_OFF" variable (:constant-flag t) nil [401 425])
            ("MASK_STATUS_CARRY_ON" variable (:constant-flag t) nil [448 468])
            ("MASK_STATUS_CARRY_OFF" variable (:constant-flag t) nil [487 508])
            ("MAS_STATUS_INTERRUPT_ON" variable (:constant-flag t) nil [531 554])
            ("MAS_STATUS_INTERRUPT_OFF" variable (:constant-flag t) nil [573 597])
            ("MASK_STATUS_BREAK_ON" variable (:constant-flag t) nil [620 640])
            ("MASK_STATUS_BREAK_OFF" variable (:constant-flag t) nil [659 680])
            ("CPU_STATUS_REGISTER_INITIAL_VALUE" variable (:constant-flag t) nil [703 736])
            ("CPU_STACK_POINTER_INITIAL_VALUE" variable (:constant-flag t) nil [756 787])
            ("GET_STACK_ADDRESS" variable (:constant-flag t) nil [802 819])
            ("STACK_ADDRESS_TOP" variable (:constant-flag t) nil [855 872])
            ("STACK_ADDRESS_BOTTOM" variable (:constant-flag t) nil [888 908])
            ("VALIDATE_STACK_ADDRESS" variable (:constant-flag t) nil [925 947])
            ("VALIDATE_STACK_POINTER" variable (:constant-flag t) nil [1021 1043])
            ("CPU" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1107 1114])
                    ("getPC" function
                       (:prototype-flag t
                        :type ("Address" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1270 1286])
                    ("setPC" function
                       (:prototype-flag t
                        :arguments 
                          ( ("PC" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1302 1310]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1291 1311])
                    ("getSP" function
                       (:prototype-flag t
                        :type ("Byte" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1321 1334])
                    ("setSP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("SP" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1350 1358]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1339 1359])
                    ("getStatus" function
                       (:prototype-flag t
                        :type ("Byte" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1369 1386])
                    ("setStatus" function
                       (:prototype-flag t
                        :arguments 
                          ( ("status" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1406 1418]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1391 1419])
                    ("getIndexX" function
                       (:prototype-flag t
                        :type ("Byte" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1425 1442])
                    ("setIndexX" function
                       (:prototype-flag t
                        :arguments 
                          ( ("X" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1462 1469]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1447 1470])
                    ("getIndexY" function
                       (:prototype-flag t
                        :type ("Byte" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1480 1497])
                    ("setIndexY" function
                       (:prototype-flag t
                        :arguments 
                          ( ("Y" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1517 1524]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1502 1525])
                    ("getA" function
                       (:prototype-flag t
                        :type ("Byte" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1531 1543])
                    ("setA" function
                       (:prototype-flag t
                        :arguments 
                          ( ("A" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1558 1565]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1548 1566])
                    ("execute" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1572 1587])
                    ("test" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1593 1605])
                    ("handleInterrupt" function
                       (:prototype-flag t
                        :arguments 
                          ( ("handlerLowByte" variable (:type ("Address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1631 1654])
                            ("fromBRK" variable (:type ("Boolean" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1655 1671]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1610 1672])
                    ("getInterrputDisable" function
                       (:prototype-flag t
                        :type ("Boolean" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1677 1707])
                    ("private" label nil (reparse-symbol classsubparts) [1711 1719])
                    ("PC" variable (:type ("Address" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1724 1735])
                    ("SP" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1740 1748])
                    ("status" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1753 1765])
                    ("X" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1770 1777])
                    ("Y" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1782 1789])
                    ("A" variable (:type ("Byte" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1794 1801])
                    ("JMP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("address" variable (:type ("Address" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1816 1832]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1807 1833]))                  
                :type "class")
                nil [1094 1836]))          
      :file "cpu.h"
      :pointmax 1845
      :fsize 1821
      :lastmodtime '(22804 41898 40287 467000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MASK_STATUS_OVERFLOW_ON" . ((symbol "MASK_BIT6" 383 . 392)))
          ("MASK_STATUS_CARRY_ON" . ((symbol "MASK_BIT0" 469 . 478)))
          ("MAS_STATUS_INTERRUPT_ON" . ((symbol "MASK_BIT2" 555 . 564)))
          ("MASK_STATUS_ZERO_ON" . ((symbol "MASK_BIT1" 122 . 131)))
          ("MASK_STATUS_NEGATIVE_OFF" . ((semantic-list "(~MASK_BIT7)" 337 . 349)))
          ("MASK_STATUS_BREAK_ON" . ((symbol "MASK_BIT4" 641 . 650)))
          ("STACK_ADDRESS_TOP" . ((number "0x01FF" 873 . 879)))
          ("MASK_STATUS_DECIMAL_ON" . ((symbol "MASK_BIT3" 206 . 215)))
          ("MASK_STATUS_NEGATIVE_ON" . ((symbol "MASK_BIT7" 294 . 303)))
          ("MAS_STATUS_INTERRUPT_OFF" . ((semantic-list "(~MASK_BIT2)" 598 . 610)))
          ("MASK_STATUS_BREAK_OFF" . ((semantic-list "(~MASK_BIT4)" 681 . 693)))
          ("CPU_STACK_POINTER_INITIAL_VALUE" . ((number "0xFF" 788 . 792)))
          ("GET_STACK_ADDRESS" (spp-arg-list ("x") 819 . 822) . ((semantic-list "((Address) 0x0100 + x)" 823 . 845)))
          ("MASK_STATUS_ZERO_OFF" . ((semantic-list "(~MASK_BIT1)" 161 . 173)))
          ("MASK_STATUS_OVERFLOW_OFF" . ((semantic-list "(~MASK_BIT6)" 426 . 438)))
          ("CPU_STATUS_REGISTER_INITIAL_VALUE" . ((symbol "MASK_BIT5" 737 . 746)))
          ("STACK_ADDRESS_BOTTOM" . ((number "0x0100" 909 . 915)))
          ("VALIDATE_STACK_POINTER" (spp-arg-list ("x") 1043 . 1046) . ((symbol "VALIDATE_STACK_ADDRESS" 1047 . 1069) (semantic-list "(GET_STACK_ADDRESS(x))" 1069 . 1091)))
          ("MASK_STATUS_DECIMAL_OFF" . ((semantic-list "(~MASK_BIT3)" 248 . 260)))
          ("CPU_H")
          ("MASK_STATUS_CARRY_OFF" . ((semantic-list "(~MASK_BIT0)" 509 . 521)))
          ("VALIDATE_STACK_ADDRESS" (spp-arg-list ("x") 947 . 950) . 
              ((symbol "assert" 951 . 957) (semantic-list "(STACK_ADDRESS_BOTTOM <= x && x <= STACK_ADDRESS_TOP)" 957 . 1010) (punctuation ";" 1010 . 1011)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("INSTRUCTIONS_H" variable (:constant-flag t) nil [32 46])
            ("LDA_IMM" variable (:constant-flag t) nil [56 63])
            ("LDX_IMM" variable (:constant-flag t) nil [77 84])
            ("LDY_IMM" variable (:constant-flag t) nil [98 105])
            ("AND_IMM" variable (:constant-flag t) nil [119 126])
            ("ORA_IMM" variable (:constant-flag t) nil [140 147])
            ("EOR_IMM" variable (:constant-flag t) nil [161 168])
            ("CMP_IMM" variable (:constant-flag t) nil [182 189])
            ("CPX_IMM" variable (:constant-flag t) nil [203 210])
            ("CPY_IMM" variable (:constant-flag t) nil [224 231])
            ("ADC_IMM" variable (:constant-flag t) nil [245 252])
            ("SBC_IMM" variable (:constant-flag t) nil [266 273])
            ("LDA_ZPAGE" variable (:constant-flag t) nil [288 297])
            ("STA_ZPAGE" variable (:constant-flag t) nil [311 320])
            ("LDX_ZPAGE" variable (:constant-flag t) nil [334 343])
            ("STX_ZPAGE" variable (:constant-flag t) nil [357 366])
            ("LDY_ZPAGE" variable (:constant-flag t) nil [380 389])
            ("STY_ZPAGE" variable (:constant-flag t) nil [403 412])
            ("AND_ZPAGE" variable (:constant-flag t) nil [426 435])
            ("ORA_ZPAGE" variable (:constant-flag t) nil [449 458])
            ("EOR_ZPAGE" variable (:constant-flag t) nil [472 481])
            ("BIT_ZPAGE" variable (:constant-flag t) nil [495 504])
            ("CMP_ZPAGE" variable (:constant-flag t) nil [518 527])
            ("CPX_ZPAGE" variable (:constant-flag t) nil [541 550])
            ("CPY_ZPAGE" variable (:constant-flag t) nil [564 573])
            ("ADC_ZPAGE" variable (:constant-flag t) nil [587 596])
            ("SBC_ZPAGE" variable (:constant-flag t) nil [610 619])
            ("ASL_ZPAGE" variable (:constant-flag t) nil [633 642])
            ("LSR_ZPAGE" variable (:constant-flag t) nil [656 665])
            ("ROL_ZPAGE" variable (:constant-flag t) nil [679 688])
            ("ROR_ZPAGE" variable (:constant-flag t) nil [702 711])
            ("INC_ZPAGE" variable (:constant-flag t) nil [725 734])
            ("DEC_ZPAGE" variable (:constant-flag t) nil [748 757]))          
      :file "instructions.h"
      :pointmax 771
      :fsize 1166
      :lastmodtime '(22804 41896 123620 725000)
      :unmatched-syntax nil
      :lexical-table 
        '(("LDY_IMM" . ((number "0xA0" 106 . 110)))
          ("STX_ZPAGE" . ((number "0x86" 367 . 371)))
          ("ORA_ZPAGE" . ((number "0x05" 459 . 463)))
          ("CPX_ZPAGE" . ((number "0xE4" 551 . 555)))
          ("ADC_IMM" . ((number "0x69" 253 . 257)))
          ("SBC_IMM" . ((number "0xE9" 274 . 278)))
          ("STY_ZPAGE" . ((number "0x84" 413 . 417)))
          ("CPY_ZPAGE" . ((number "0xC4" 574 . 578)))
          ("INC_ZPAGE" . ((number "0xE6" 735 . 739)))
          ("AND_IMM" . ((number "0x29" 127 . 131)))
          ("STA_ZPAGE" . ((number "0x85" 321 . 325)))
          ("ADC_ZPAGE" . ((number "0x65" 597 . 601)))
          ("SBC_ZPAGE" . ((number "0xE5" 620 . 624)))
          ("ROL_ZPAGE" . ((number "0x26" 689 . 693)))
          ("ORA_IMM" . ((number "0x09" 148 . 152)))
          ("CPX_IMM" . ((number "0xE0" 211 . 215)))
          ("BIT_ZPAGE" . ((number "0x24" 505 . 509)))
          ("ASL_ZPAGE" . ((number "0x06" 643 . 647)))
          ("INSTRUCTIONS_H")
          ("LDA_IMM" . ((number "0xA9" 64 . 68)))
          ("EOR_IMM" . ((number "0x49" 169 . 173)))
          ("CMP_IMM" . ((number "0xC9" 190 . 194)))
          ("LDX_ZPAGE" . ((number "0xA6" 344 . 348)))
          ("LSR_ZPAGE" . ((number "0x46" 666 . 670)))
          ("LDY_ZPAGE" . ((number "0xA4" 390 . 394)))
          ("DEC_ZPAGE" . ((number "0xC6" 758 . 762)))
          ("CPY_IMM" . ((number "0xC0" 232 . 236)))
          ("AND_ZPAGE" . ((number "0x25" 436 . 440)))
          ("LDA_ZPAGE" . ((number "0xA5" 298 . 302)))
          ("EOR_ZPAGE" . ((number "0x45" 482 . 486)))
          ("CMP_ZPAGE" . ((number "0xC5" 528 . 532)))
          ("ROR_ZPAGE" . ((number "0x66" 712 . 716)))
          ("LDX_IMM" . ((number "0xA2" 85 . 89)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags nil
      :file "opcodes.h"
      :pointmax 1136
      :fsize 9272
      :lastmodtime '(22804 55570 117498 266000)
      :unmatched-syntax nil))
  :file "!home!jonbraatz!Desktop!NES!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
